USE [Sap_Approval]
GO
/****** Object:  StoredProcedure [dbo].[GetProductionClosedStatusExcel]    Script Date: 22-07-2025 16:04:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER   PROCEDURE [dbo].[GetProductionClosedStatusExcel]
    @Sloc_Code VARCHAR(50) = NULL,
    @FromDate DATE = NULL,
    @ToDate DATE = NULL
AS
BEGIN
    SET NOCOUNT ON;

    ---------------------------------
    -- 1. Summary View (grouped)
    ---------------------------------
    SELECT 
        SC.Supv_ID,
        CONCAT(SC.Sup_Code, ' - ', SC.Sup_Name) AS Sup_Name,
        COUNT(TP.Prdord_ID) AS [No_Of_Orders],
        COUNT(CASE WHEN TP.Order_Type = 'Closed' THEN 1 END) AS [No_Order_Close],
        COUNT(CASE WHEN TP.Order_Type = 'New' THEN 1 END) AS [No_Of_Open_Orders],
        COUNT(CASE WHEN TP.Ontime_or_Delay = 'g' THEN 1 END) AS [Issue_Posted_on_Time],
        COUNT(CASE WHEN TP.Ontime_or_Delay = 'y' THEN 1 END) AS [Issue_Posted_Delay60],
        COUNT(CASE WHEN TP.Ontime_or_Delay = 'r' THEN 1 END) AS [Issue_Posted_Delay]
    FROM Trn_prod_order_status TP
    LEFT JOIN Mst_SupvCode SC ON TP.Supv_ID = SC.Supv_ID
    LEFT JOIN (
        SELECT Order_No, Sloc_Code
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY Order_No ORDER BY Created_On DESC) AS rn
            FROM TrnSap_Order_creation
        ) OC
        WHERE rn = 1
    ) OC ON TP.Order_No = OC.Order_No
    WHERE
        (
            (TP.Order_Type = 'Closed' AND CAST(TP.Order_Closed_Date AS DATE) BETWEEN @FromDate AND @ToDate)
            OR
            (TP.Order_Type = 'New' AND CAST(TP.Created_On AS DATE) BETWEEN @FromDate AND @ToDate)
        )
        AND (@Sloc_Code IS NULL OR OC.Sloc_Code = @Sloc_Code)
    GROUP BY SC.Supv_ID, SC.Sup_Code, SC.Sup_Name;

    ---------------------------------
    -- 2. Split View (raw details)
    ---------------------------------
    SELECT 
    SC.Supv_ID,
    CONCAT(SC.Sup_Code, ' - ', SC.Sup_Name) AS Sup_Name,
    TP.Material_No,
    TP.Material_Description,
    FORMAT(TP.Order_Created_Date, 'dd:MM:yyyy HH:mm') AS Order_Created_Date,
    FORMAT(TP.Order_Closed_Date, 'dd:MM:yyyy HH:mm') AS Order_Closed_Date,

    -- Supervisor Lead Time
    RIGHT('0' + CAST((TP.Supv_Lead_Time / 60) AS VARCHAR), 2) + ':' + 
    RIGHT('0' + CAST((TP.Supv_Lead_Time % 60) AS VARCHAR), 2) AS Supv_Lead_Time,

    TP.Order_Qty,
    TP.Order_No,
    UPPER(TP.Ontime_or_Delay) AS Ontime_or_Delay,

    -- Delay in Minutes and Delay in hh:mm
    DATEDIFF(MINUTE, TP.Order_Created_Date, TP.Order_Closed_Date) - TP.Supv_Lead_Time AS DelayInMinutes,
    RIGHT('0' + CAST(((DATEDIFF(MINUTE, TP.Order_Created_Date, TP.Order_Closed_Date) - TP.Supv_Lead_Time) / 60) AS VARCHAR), 2) + ':' +
    RIGHT('0' + CAST(((DATEDIFF(MINUTE, TP.Order_Created_Date, TP.Order_Closed_Date) - TP.Supv_Lead_Time) % 60) AS VARCHAR), 2) AS Delay_Time,

    -- ✅ Total Time Taken in Minutes
    DATEDIFF(MINUTE, TP.Order_Created_Date, TP.Order_Closed_Date) AS TotalTimeTakenInMinutes,

    -- ✅ Total Time Taken in hh:mm
    RIGHT('0' + CAST((DATEDIFF(MINUTE, TP.Order_Created_Date, TP.Order_Closed_Date) / 60) AS VARCHAR), 2) + ':' +
    RIGHT('0' + CAST((DATEDIFF(MINUTE, TP.Order_Created_Date, TP.Order_Closed_Date) % 60) AS VARCHAR), 2) AS TotalDuration

FROM Trn_prod_order_status TP
LEFT JOIN Mst_SupvCode SC ON TP.Supv_ID = SC.Supv_ID
LEFT JOIN (
    SELECT Order_No, Sloc_Code
    FROM (
        SELECT *, ROW_NUMBER() OVER (PARTITION BY Order_No ORDER BY Created_On DESC) AS rn
        FROM TrnSap_Order_creation
    ) OC
    WHERE rn = 1
) OC ON TP.Order_No = OC.Order_No

WHERE
    (
        (TP.Order_Type = 'Closed' AND CAST(TP.Order_Closed_Date AS DATE) BETWEEN @FromDate AND @ToDate)
        OR
        (TP.Order_Type = 'New' AND CAST(TP.Created_On AS DATE) BETWEEN @FromDate AND @ToDate)
    )
    AND (@Sloc_Code IS NULL OR OC.Sloc_Code = @Sloc_Code);

END;
