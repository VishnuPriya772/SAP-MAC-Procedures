USE [Sap_Approval]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[Sync_Prod_Order_Status]
AS
BEGIN
    SET NOCOUNT ON;

    -- Step 1: Insert NEW Orders (not already in Trn_Prod_Order_Status, and not already closed)
    ;WITH DistinctOrders AS (
        SELECT 
            *,
            ROW_NUMBER() OVER (PARTITION BY Order_No ORDER BY Order_Date DESC) AS rn
        FROM TrnSap_Order_creation
    )
    INSERT INTO Trn_Prod_Order_Status (
        Plant_ID,
        Order_Type,
        Order_Created_Date,
        Order_No,
        Material_No,
        Material_Description,
        Order_Qty,
        Order_Created_By,
        Supv_ID,
        Supv_Lead_Time,
        Created_By,
        Created_On
    )
    SELECT
        mp.Plant_ID,
        'New',
        c.Order_Date,
        c.Order_No,
        c.Material_No,
        c.Material_Description,
        c.Order_Qty,
        c.Created_By,
        ms.Supv_ID,
        ms.Supv_Lead_Time,
        1,
        GETDATE()
    FROM DistinctOrders c
    LEFT JOIN Mst_Plant mp 
        ON c.Plant_Code = mp.Plant_Code
    LEFT JOIN Mst_SupvCode ms 
        ON ms.Sup_Code = c.Sup_Code 
        AND ms.Plant_ID = mp.Plant_ID
    WHERE c.rn = 1
    AND NOT EXISTS (
        SELECT 1 FROM Trn_Prod_Order_Status s WHERE s.Order_No = c.Order_No
    )
    AND NOT EXISTS (
        SELECT 1 FROM TrnSap_Order_Closed cl WHERE cl.Order_No = c.Order_No
    );

    -- Step 2: Update Orders as CLOSED if they exist in both tables
    UPDATE s
    SET
        s.Order_Type = 'Closed',
        s.Order_Closed_Date = cl.OrderClosed_Date,
        s.Modified_By = cl.Modified_By,
        s.Modified_On = cl.Modified_On,
        s.Issue_Duration_Time = 
            CASE 
                WHEN DATEDIFF(MINUTE, s.Order_Created_Date, cl.OrderClosed_Date) > s.Supv_Lead_Time 
                THEN DATEDIFF(MINUTE, s.Order_Created_Date, cl.OrderClosed_Date) - s.Supv_Lead_Time 
                ELSE 0 
            END,
        s.Ontime_or_Delay = 
            CASE 
                WHEN DATEDIFF(MINUTE, s.Order_Created_Date, cl.OrderClosed_Date) <= s.Supv_Lead_Time 
                THEN 'OnTime' 
                ELSE 'Delay' 
            END
    FROM Trn_Prod_Order_Status s
    INNER JOIN TrnSap_Order_Closed cl 
        ON s.Order_No = cl.Order_No;

    -- Step 3: Set Read_Status = 1 in TrnSap_Order_creation
    UPDATE c
    SET c.Read_Status = 1
    FROM TrnSap_Order_creation c
    WHERE EXISTS (
        SELECT 1 FROM Trn_Prod_Order_Status s WHERE s.Order_No = c.Order_No
    );

    -- Step 4: Set Read_Status = 1 in TrnSap_Order_Closed
    UPDATE cl
    SET cl.Read_Status = 1
    FROM TrnSap_Order_Closed cl
    WHERE EXISTS (
        SELECT 1 FROM Trn_Prod_Order_Status s WHERE s.Order_No = cl.Order_No
    );
END;
